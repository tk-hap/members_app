# Generated by Django 5.0.9 on 2024-11-04 05:15

import django.db.models.deletion
import eventtools.models
import recurrence.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('trainers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExerciseClassEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=50)),
                ('max_participants', models.IntegerField(null=True)),
                ('recurrence', recurrence.fields.RecurrenceField(blank=True, null=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='trainers.trainer')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, eventtools.models.OccurrenceMixin),
        ),
        migrations.CreateModel(
            name='ExerciseClassOccurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(db_index=True, verbose_name='start')),
                ('end', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='end')),
                ('repeat', eventtools.models.ChoiceTextField(blank=True, choices=[('RRULE:FREQ=DAILY', 'Daily'), ('RRULE:FREQ=WEEKLY', 'Weekly'), ('RRULE:FREQ=MONTHLY', 'Monthly'), ('RRULE:FREQ=YEARLY', 'Yearly')], default='', verbose_name='repeat')),
                ('repeat_until', models.DateField(blank=True, null=True, verbose_name='repeat_until')),
                ('scheduled_date', models.DateTimeField()),
                ('duration', models.DurationField(null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occurrences', to='exercise_class.exerciseclassevent')),
                ('participants', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('start', 'end'),
                'abstract': False,
            },
            bases=(models.Model, eventtools.models.OccurrenceMixin),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exercise_class.exerciseclassoccurrence')),
            ],
            options={
                'unique_together': {('occurrence', 'participant')},
            },
        ),
    ]
